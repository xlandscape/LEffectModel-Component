Warning2 November 2020 3:57:39.381481 pmVM: Win32 - SmalltalkImage: Squeak6.0alpha [latest update: #19893]SecurityManager state:Restricted: falseFileAccess: trueSocketAccess: trueWorking Dir E:\SQ\SQ6Trusted Dir E:\SQ\SQ6\bavec001Untrusted Dir \\WURNET.NL\Homes\bavec001\My Documents\My Squeak[] in MCMczWriter>>writeSnapshot:	Receiver: a MCMczWriter	Arguments and temporary variables: <<error during printing>	Receiver's instance variables: 		stream: 	MultiByteFileStream: 'E:\SQ\Squeak6.0alpha-19890-64bit-202003021730-Win...etc...		zip: 	a ZipArchive		infoWriter: 	a MCVersionInfoWriterOrderedCollection(Collection)>>ifEmpty:	Receiver: an OrderedCollection()	Arguments and temporary variables: 		aBlock: 	[closure] in MCMczWriter>>writeSnapshot:	Receiver's instance variables: 		array: 	#(nil nil nil nil nil nil nil nil nil nil)		firstIndex: 	1		lastIndex: 	0MCMczWriter>>writeSnapshot:	Receiver: a MCMczWriter	Arguments and temporary variables: 		aSnapshot: 	a MCSnapshot	Receiver's instance variables: 		stream: 	MultiByteFileStream: 'E:\SQ\Squeak6.0alpha-19890-64bit-202003021730-Win...etc...		zip: 	a ZipArchive		infoWriter: 	a MCVersionInfoWriterMCMczWriter>>writeDefinitions:	Receiver: a MCMczWriter	Arguments and temporary variables: 		aVersion: 	a MCVersion(Ecotalk-DEB-IBMTests-jmb.7)	Receiver's instance variables: 		stream: 	MultiByteFileStream: 'E:\SQ\Squeak6.0alpha-19890-64bit-202003021730-Win...etc...		zip: 	a ZipArchive		infoWriter: 	a MCVersionInfoWriterMCMczWriter>>writeVersion:	Receiver: a MCMczWriter	Arguments and temporary variables: 		aVersion: 	a MCVersion(Ecotalk-DEB-IBMTests-jmb.7)	Receiver's instance variables: 		stream: 	MultiByteFileStream: 'E:\SQ\Squeak6.0alpha-19890-64bit-202003021730-Win...etc...		zip: 	a ZipArchive		infoWriter: 	a MCVersionInfoWriterMCMczWriter class>>fileOut:on:	Receiver: MCMczWriter	Arguments and temporary variables: 		aVersion: 	a MCVersion(Ecotalk-DEB-IBMTests-jmb.7)		aStream: 	MultiByteFileStream: 'E:\SQ\Squeak6.0alpha-19890-64bit-202003021730-Wi...etc...		inst: 	a MCMczWriter	Receiver's instance variables: 		superclass: 	MCWriter		methodDict: 	a MethodDictionary(#addString:at:->(MCMczWriter>>#addString:at: "a CompiledMethod...etc...		format: 	65539		instanceVariables: 	#('zip' 'infoWriter')		organization: 	('accessing' format snapshotWriterClass zip)('initializing' initialize...etc...		subclasses: 	{MCMcdWriter . MCFileTreeWriter}		name: 	#MCMczWriter		classPool: 	nil		sharedPools: 	nil		environment: 	Smalltalk		category: 	#'Monticello-Storing'MCVersion>>fileOutOn:	Receiver: a MCVersion(Ecotalk-DEB-IBMTests-jmb.7)	Arguments and temporary variables: 		aStream: 	MultiByteFileStream: 'E:\SQ\Squeak6.0alpha-19890-64bit-202003021730-Wi...etc...	Receiver's instance variables: 		package: 	a MCPackage(Ecotalk-DEB-IBMTests)		info: 	a MCVersionInfo(Ecotalk-DEB-IBMTests-jmb.7)		snapshot: 	a MCSnapshot		dependencies: 	#()[] in MCCacheRepository(MCFileBasedRepository)>>basicStoreVersion:	Receiver: a MCCacheRepository(E:\SQ\Squeak6.0alpha-19890-64bit-202003021730-Windows\package-cache)	Arguments and temporary variables: 		aMCVersionOrConfiguration: 	MultiByteFileStream: 'E:\SQ\Squeak6.0alpha-19890-64b...etc...		s: 	a MCVersion(Ecotalk-DEB-IBMTests-jmb.7)	Receiver's instance variables: 		creationTemplate: 	nil		storeDiffs: 	nil		cache: 	a Dictionary('Ecotalk-Data-jmb.54.mcz'->a MCVersion(Ecotalk-Data-jmb.54)...etc...		allFileNamesCache: 	nil		allVersionNamesCache: 	nil		directory: 	DosFileDirectory on 'E:\SQ\Squeak6.0alpha-19890-64bit-202003021730-W...etc...		packageCaches: 	nil		seenFiles: 	nilMCCacheRepository(MCDirectoryRepository)>>writeStreamForFileNamed:replace:do:	Receiver: a MCCacheRepository(E:\SQ\Squeak6.0alpha-19890-64bit-202003021730-Windows\package-cache)	Arguments and temporary variables: 		aString: 	'Ecotalk-DEB-IBMTests-jmb.7.mcz'		aBoolean: 	false		aBlock: 	[closure] in MCCacheRepository(MCFileBasedRepository)>>basicStoreVersion:...etc...		file: 	MultiByteFileStream: 'E:\SQ\Squeak6.0alpha-19890-64bit-202003021730-Windo...etc...		sel: 	#newFileNamed:	Receiver's instance variables: 		creationTemplate: 	nil		storeDiffs: 	nil		cache: 	a Dictionary('Ecotalk-Data-jmb.54.mcz'->a MCVersion(Ecotalk-Data-jmb.54)...etc...		allFileNamesCache: 	nil		allVersionNamesCache: 	nil		directory: 	DosFileDirectory on 'E:\SQ\Squeak6.0alpha-19890-64bit-202003021730-W...etc...		packageCaches: 	nil		seenFiles: 	nilMCCacheRepository(MCFileBasedRepository)>>writeStreamForFileNamed:do:	Receiver: a MCCacheRepository(E:\SQ\Squeak6.0alpha-19890-64bit-202003021730-Windows\package-cache)	Arguments and temporary variables: 		aString: 	'Ecotalk-DEB-IBMTests-jmb.7.mcz'		aBlock: 	[closure] in MCCacheRepository(MCFileBasedRepository)>>basicStoreVersion:...etc...	Receiver's instance variables: 		creationTemplate: 	nil		storeDiffs: 	nil		cache: 	a Dictionary('Ecotalk-Data-jmb.54.mcz'->a MCVersion(Ecotalk-Data-jmb.54)...etc...		allFileNamesCache: 	nil		allVersionNamesCache: 	nil		directory: 	DosFileDirectory on 'E:\SQ\Squeak6.0alpha-19890-64bit-202003021730-W...etc...		packageCaches: 	nil		seenFiles: 	nilMCCacheRepository(MCFileBasedRepository)>>basicStoreVersion:	Receiver: a MCCacheRepository(E:\SQ\Squeak6.0alpha-19890-64bit-202003021730-Windows\package-cache)	Arguments and temporary variables: 		aMCVersionOrConfiguration: 	a MCVersion(Ecotalk-DEB-IBMTests-jmb.7)	Receiver's instance variables: 		creationTemplate: 	nil		storeDiffs: 	nil		cache: 	a Dictionary('Ecotalk-Data-jmb.54.mcz'->a MCVersion(Ecotalk-Data-jmb.54)...etc...		allFileNamesCache: 	nil		allVersionNamesCache: 	nil		directory: 	DosFileDirectory on 'E:\SQ\Squeak6.0alpha-19890-64bit-202003021730-W...etc...		packageCaches: 	nil		seenFiles: 	nilMCCacheRepository>>basicStoreVersion:	Receiver: a MCCacheRepository(E:\SQ\Squeak6.0alpha-19890-64bit-202003021730-Windows\package-cache)	Arguments and temporary variables: 		aVersion: 	a MCVersion(Ecotalk-DEB-IBMTests-jmb.7)	Receiver's instance variables: 		creationTemplate: 	nil		storeDiffs: 	nil		cache: 	a Dictionary('Ecotalk-Data-jmb.54.mcz'->a MCVersion(Ecotalk-Data-jmb.54)...etc...		allFileNamesCache: 	nil		allVersionNamesCache: 	nil		directory: 	DosFileDirectory on 'E:\SQ\Squeak6.0alpha-19890-64bit-202003021730-W...etc...		packageCaches: 	nil		seenFiles: 	nilMCCacheRepository(MCRepository)>>storeVersion:	Receiver: a MCCacheRepository(E:\SQ\Squeak6.0alpha-19890-64bit-202003021730-Windows\package-cache)	Arguments and temporary variables: 		aMCVersionOrConfiguration: 	a MCVersion(Ecotalk-DEB-IBMTests-jmb.7)	Receiver's instance variables: 		creationTemplate: 	nil		storeDiffs: 	nil		cache: 	a Dictionary('Ecotalk-Data-jmb.54.mcz'->a MCVersion(Ecotalk-Data-jmb.54)...etc...		allFileNamesCache: 	nil		allVersionNamesCache: 	nil		directory: 	DosFileDirectory on 'E:\SQ\Squeak6.0alpha-19890-64bit-202003021730-W...etc...		packageCaches: 	nil		seenFiles: 	nilMCVersion>>addToCache	Receiver: a MCVersion(Ecotalk-DEB-IBMTests-jmb.7)	Arguments and temporary variables: 	Receiver's instance variables: 		package: 	a MCPackage(Ecotalk-DEB-IBMTests)		info: 	a MCVersionInfo(Ecotalk-DEB-IBMTests-jmb.7)		snapshot: 	a MCSnapshot		dependencies: 	#()MCVersion>>initializeWithPackage:info:snapshot:dependencies:	Receiver: a MCVersion(Ecotalk-DEB-IBMTests-jmb.7)	Arguments and temporary variables: 		aPackage: 	a MCPackage(Ecotalk-DEB-IBMTests)		aVersionInfo: 	a MCVersionInfo(Ecotalk-DEB-IBMTests-jmb.7)		aSnapshot: 	a MCSnapshot		aCollection: 	#()	Receiver's instance variables: 		package: 	a MCPackage(Ecotalk-DEB-IBMTests)		info: 	a MCVersionInfo(Ecotalk-DEB-IBMTests-jmb.7)		snapshot: 	a MCSnapshot		dependencies: 	#()MCVersion class>>package:info:snapshot:dependencies:	Receiver: MCVersion	Arguments and temporary variables: 		aPackage: 	a MCPackage(Ecotalk-DEB-IBMTests)		aVersionInfo: 	a MCVersionInfo(Ecotalk-DEB-IBMTests-jmb.7)		aSnapshot: 	a MCSnapshot		aCollection: 	#()	Receiver's instance variables: 		superclass: 	Object		methodDict: 	a MethodDictionary(#addToCache->(MCVersion>>#addToCache "a CompiledMethod...etc...		format: 	65540		instanceVariables: 	#('package' 'info' 'snapshot' 'dependencies')		organization: 	('accessing' changes dependencies fileName info package snapshot summary...etc...		subclasses: 	{MCDiffyVersion}		name: 	#MCVersion		classPool: 	nil		sharedPools: 	nil		environment: 	Smalltalk		category: 	#'Monticello-Versioning'MCMczReader(MCVersionReader)>>basicVersion	Receiver: a MCMczReader	Arguments and temporary variables: 	Receiver's instance variables: 		stream: 	MultiByteFileStream: 'E:\OneDrive - WageningenUR\STDOC\squeak\DEV\Ecota...etc...		package: 	a MCPackage(Ecotalk-DEB-IBMTests)		info: 	a MCVersionInfo(Ecotalk-DEB-IBMTests-jmb.7)		definitions: 	an OrderedCollection()		dependencies: 	#()		stepChildren: 	nil		zip: 	a ZipArchive		infoCache: 	a Dictionary('1d5007b6-367d-8646-ab25-fa98ee4daa40'->a MCVersionInfo...etc...MCMczReader(MCVersionReader)>>version	Receiver: a MCMczReader	Arguments and temporary variables: 	Receiver's instance variables: 		stream: 	MultiByteFileStream: 'E:\OneDrive - WageningenUR\STDOC\squeak\DEV\Ecota...etc...		package: 	a MCPackage(Ecotalk-DEB-IBMTests)		info: 	a MCVersionInfo(Ecotalk-DEB-IBMTests-jmb.7)		definitions: 	an OrderedCollection()		dependencies: 	#()		stepChildren: 	nil		zip: 	a ZipArchive		infoCache: 	a Dictionary('1d5007b6-367d-8646-ab25-fa98ee4daa40'->a MCVersionInfo...etc...[] in MCDirectoryRepository(MCFileBasedRepository)>>loadVersionFromFileNamed:	Receiver: a MCDirectoryRepository(E:\OneDrive - WageningenUR\STDOC\squeak\DEV\Ecotalk-DEB-IBM)	Arguments and temporary variables: <<error during printing>	Receiver's instance variables: 		creationTemplate: 	nil		storeDiffs: 	nil		cache: 	a Dictionary()		allFileNamesCache: 	nil		allVersionNamesCache: 	nil		directory: 	DosFileDirectory on 'E:\OneDrive - WageningenUR\STDOC\squeak\DEV\Eco...etc...--- The full stack ---[] in MCMczWriter>>writeSnapshot:OrderedCollection(Collection)>>ifEmpty:MCMczWriter>>writeSnapshot:MCMczWriter>>writeDefinitions:MCMczWriter>>writeVersion:MCMczWriter class>>fileOut:on:MCVersion>>fileOutOn:[] in MCCacheRepository(MCFileBasedRepository)>>basicStoreVersion:MCCacheRepository(MCDirectoryRepository)>>writeStreamForFileNamed:replace:do:MCCacheRepository(MCFileBasedRepository)>>writeStreamForFileNamed:do:MCCacheRepository(MCFileBasedRepository)>>basicStoreVersion:MCCacheRepository>>basicStoreVersion:MCCacheRepository(MCRepository)>>storeVersion:MCVersion>>addToCacheMCVersion>>initializeWithPackage:info:snapshot:dependencies:MCVersion class>>package:info:snapshot:dependencies:MCMczReader(MCVersionReader)>>basicVersionMCMczReader(MCVersionReader)>>version[] in MCDirectoryRepository(MCFileBasedRepository)>>loadVersionFromFileNamed: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -[] in MCDirectoryRepository(MCFileBasedRepository)>>versionReaderForFileNamed:do:MCDirectoryRepository>>readStreamForFileNamed:do:MCDirectoryRepository(MCFileBasedRepository)>>versionReaderForFileNamed:do:MCDirectoryRepository(MCFileBasedRepository)>>loadVersionFromFileNamed:[] in [] in MCDirectoryRepository(MCFileBasedRepository)>>versionNamed:FullBlockClosure(BlockClosure)>>on:do:[] in MCDirectoryRepository(MCFileBasedRepository)>>versionNamed:Dictionary>>at:ifAbsent:MCDirectoryRepository(MCFileBasedRepository)>>versionNamed:[] in MCFileRepositoryInspector(MCRepositoryInspector)>>versionFullBlockClosure(BlockClosure)>>ensure:CursorWithMask(Cursor)>>showWhile:MCFileRepositoryInspector(MCRepositoryInspector)>>versionMCFileRepositoryInspector(MCVersionInspector)>>mergeMCFileRepositoryInspector(MCRepositoryInspector)>>mergePluggableButtonMorphPlus(PluggableButtonMorph)>>performActionPluggableButtonMorphPlus>>performAction[] in PluggableButtonMorphPlus(PluggableButtonMorph)>>mouseUp:Array(SequenceableCollection)>>do:PluggableButtonMorphPlus(PluggableButtonMorph)>>mouseUp:PluggableButtonMorphPlus(Morph)>>handleMouseUp:MouseButtonEvent>>sentTo:PluggableButtonMorphPlus(Morph)>>handleEvent:PluggableButtonMorphPlus(Morph)>>handleFocusEvent:MorphicEventDispatcher>>doHandlingForFocusEvent:with:MorphicEventDispatcher>>dispatchFocusEvent:with:PluggableButtonMorphPlus(Morph)>>processFocusEvent:using:PluggableButtonMorphPlus(Morph)>>processFocusEvent:[] in [] in [] in HandMorph>>sendFocusEvent:to:clear:FullBlockClosure(BlockClosure)>>ensure:MouseButtonEvent(MorphicEvent)>>becomeActiveDuring:[] in [] in HandMorph>>sendFocusEvent:to:clear:FullBlockClosure(BlockClosure)>>ensure:HandMorph>>becomeActiveDuring:[] in HandMorph>>sendFocusEvent:to:clear:FullBlockClosure(BlockClosure)>>ensure:PasteUpMorph>>becomeActiveDuring:HandMorph>>sendFocusEvent:to:clear:HandMorph>>sendEvent:focus:clear:HandMorph>>sendMouseEvent:HandMorph>>handleEvent:HandMorph>>processEvents-- and more not shown --