MpError: No data to read10 November 2021 5:12:14.46559 pmVM: Win32 - SmalltalkImage: Squeak6.0alpha [latest update: #19893]SecurityManager state:Restricted: falseFileAccess: trueSocketAccess: trueWorking Dir E:\SQ\LEffectModelTrusted Dir E:\SQ\LEffectModel\bavec001Untrusted Dir \\WURNET.NL\Homes\bavec001\My Documents\My SqueakMpSqPortableUtil(MpPortableUtil)>>signalException:	Receiver: a MpSqPortableUtil	Arguments and temporary variables: 		anException: 	MpError: No data to read	Receiver's instance variables: a MpSqPortableUtilMpDecoder>>signalError:	Receiver: a MpDecoder	Arguments and temporary variables: 		message: 	'No data to read'	Receiver's instance variables: 		readStream: 	a ReadStream		typeMapper: 	nil		settings: 	nilMpDecoder>>decode	Receiver: a MpDecoder	Arguments and temporary variables: 	Receiver's instance variables: 		readStream: 	a ReadStream		typeMapper: 	nil		settings: 	nilMpDecoder>>decodeFrom:	Receiver: a MpDecoder	Arguments and temporary variables: 		aStream: 	a ReadStream	Receiver's instance variables: 		readStream: 	a ReadStream		typeMapper: 	nil		settings: 	nilMpDecoder>>decode:	Receiver: a MpDecoder	Arguments and temporary variables: 		byteArray: 	#[]	Receiver's instance variables: 		readStream: 	a ReadStream		typeMapper: 	nil		settings: 	nilMpDecoder class>>decode:	Receiver: MpDecoder	Arguments and temporary variables: 		byteArray: 	#[]	Receiver's instance variables: 		superclass: 	Object		methodDict: 	a MethodDictionary(#atEnd->(MpDecoder>>#atEnd "a CompiledMethod(351...etc...		format: 	65539		instanceVariables: 	#('readStream' 'typeMapper' 'settings')		organization: 	('stream-like' atEnd next)('building' buildTypeMapper:)('factor...etc...		subclasses: 	nil		name: 	#MpDecoder		classPool: 	nil		sharedPools: 	nil		environment: 	Smalltalk		category: 	#'MessagePack-Core'[] in LPopProject class(CatchmentProject class)>>extractConcDataFromMsgpack:	Receiver: LPopProject	Arguments and temporary variables: <<error during printing>	Receiver's instance variables: 		superclass: 	CatchmentProject		methodDict: 	a MethodDictionary()		format: 	0		instanceVariables: 	nil		organization: 	('as yet unclassified')		subclasses: 	nil		name: 	#LPopProject		classPool: 	nil		sharedPools: 	nil		environment: 	Smalltalk		category: 	#'Ecotalk-Catchment-Population'FullBlockClosure(BlockClosure)>>ensure:	Receiver: [closure] in LPopProject class(CatchmentProject class)>>extractConcDataFromMsgpack:	Arguments and temporary variables: 		aBlock: 	[closure] in LPopProject class(CatchmentProject class)>>extractConcDataFromMsgpack:...etc...		complete: 	nil		returnValue: 	nil	Receiver's instance variables: 		outerContext: 	LPopProject class(CatchmentProject class)>>extractConcDataFromMsgpack:...etc...		startpcOrMethod: 	([] in CatchmentProject class>>#extractConcDataFromMsgpack: "a...etc...		numArgs: 	0		receiver: 	LPopProjectLPopProject class(CatchmentProject class)>>extractConcDataFromMsgpack:	Receiver: LPopProject	Arguments and temporary variables: 		aString: 	'E:\SQ\LEffectModel\ETInput\CatchmentModelSystem\data\rummen_1992.msgp...etc...		mpFile: 	StandardFileStream: 'E:\SQ\LEffectModel\ETInput\CatchmentModelSystem\da...etc...		result: 	#(nil)	Receiver's instance variables: 		superclass: 	CatchmentProject		methodDict: 	a MethodDictionary()		format: 	0		instanceVariables: 	nil		organization: 	('as yet unclassified')		subclasses: 	nil		name: 	#LPopProject		classPool: 	nil		sharedPools: 	nil		environment: 	Smalltalk		category: 	#'Ecotalk-Catchment-Population'LPopITModelSystem(LPopModelSystem)>>setupExposureCurrentYear	Receiver: a LPopITModelSystem	Arguments and temporary variables: 		reaches: 	nil		mf: 	nil		dict: 	nil		rws: 	nil		cg: 	nil		db: 	nil		i: 	nil		iLimiT: 	nil	Receiver's instance variables: 		components: 	an OrderedCollection(LPopLandscape LPopReach LPopITAbjInd)		outputDirectory: 	'E:\SQ\LEffectModel\ecotalk\LPopITModelSystem_MoS\x1\x1s1'		world: 	LPopLandscape 1		ticks: 	1096		runLength: 	11688		prefix: 	'x1s1r1_'		runid: 	1		dtf: 	1.0		dt: 	1		steps: 	24		dt2: 	(1/24)		dt2f: 	0.041666666666666664		time: 	1096.0		doy: 	1		statistics: 	a Dictionary('adults'->an OrderedCollection(#(1 1 0 0 0 0 0 0 0 0 0...etc...		statisticsMetapop: 	a Dictionary('adults'->an OrderedCollection(#(1 1 0) #(2 2 0...etc...		concIndex: 	nil		startYear: 	1989		endYear: 	2020		startApplicationYear: 	1992		endApplicationYear: 	2015		year: 	1992		date: 	1 January 1992		yyyymmdd: 	'1992-01-01'		useCSV: 	0		stepsInHr: 	2		useTemperatureData: 	0LPopITModelSystem(LPopModelSystem)>>setNewYear	Receiver: a LPopITModelSystem	Arguments and temporary variables: 	Receiver's instance variables: 		components: 	an OrderedCollection(LPopLandscape LPopReach LPopITAbjInd)		outputDirectory: 	'E:\SQ\LEffectModel\ecotalk\LPopITModelSystem_MoS\x1\x1s1'		world: 	LPopLandscape 1		ticks: 	1096		runLength: 	11688		prefix: 	'x1s1r1_'		runid: 	1		dtf: 	1.0		dt: 	1		steps: 	24		dt2: 	(1/24)		dt2f: 	0.041666666666666664		time: 	1096.0		doy: 	1		statistics: 	a Dictionary('adults'->an OrderedCollection(#(1 1 0 0 0 0 0 0 0 0 0...etc...		statisticsMetapop: 	a Dictionary('adults'->an OrderedCollection(#(1 1 0) #(2 2 0...etc...		concIndex: 	nil		startYear: 	1989		endYear: 	2020		startApplicationYear: 	1992		endApplicationYear: 	2015		year: 	1992		date: 	1 January 1992		yyyymmdd: 	'1992-01-01'		useCSV: 	0		stepsInHr: 	2		useTemperatureData: 	0LPopITModelSystem(LPopModelSystem)>>incrementTime	Receiver: a LPopITModelSystem	Arguments and temporary variables: 		oldYear: 	1991	Receiver's instance variables: 		components: 	an OrderedCollection(LPopLandscape LPopReach LPopITAbjInd)		outputDirectory: 	'E:\SQ\LEffectModel\ecotalk\LPopITModelSystem_MoS\x1\x1s1'		world: 	LPopLandscape 1		ticks: 	1096		runLength: 	11688		prefix: 	'x1s1r1_'		runid: 	1		dtf: 	1.0		dt: 	1		steps: 	24		dt2: 	(1/24)		dt2f: 	0.041666666666666664		time: 	1096.0		doy: 	1		statistics: 	a Dictionary('adults'->an OrderedCollection(#(1 1 0 0 0 0 0 0 0 0 0...etc...		statisticsMetapop: 	a Dictionary('adults'->an OrderedCollection(#(1 1 0) #(2 2 0...etc...		concIndex: 	nil		startYear: 	1989		endYear: 	2020		startApplicationYear: 	1992		endApplicationYear: 	2015		year: 	1992		date: 	1 January 1992		yyyymmdd: 	'1992-01-01'		useCSV: 	0		stepsInHr: 	2		useTemperatureData: 	0LPopITModelSystem(LPopModelSystem)>>go	Receiver: a LPopITModelSystem	Arguments and temporary variables: 		ageing: 	true		rng: 	a Random	Receiver's instance variables: 		components: 	an OrderedCollection(LPopLandscape LPopReach LPopITAbjInd)		outputDirectory: 	'E:\SQ\LEffectModel\ecotalk\LPopITModelSystem_MoS\x1\x1s1'		world: 	LPopLandscape 1		ticks: 	1096		runLength: 	11688		prefix: 	'x1s1r1_'		runid: 	1		dtf: 	1.0		dt: 	1		steps: 	24		dt2: 	(1/24)		dt2f: 	0.041666666666666664		time: 	1096.0		doy: 	1		statistics: 	a Dictionary('adults'->an OrderedCollection(#(1 1 0 0 0 0 0 0 0 0 0...etc...		statisticsMetapop: 	a Dictionary('adults'->an OrderedCollection(#(1 1 0) #(2 2 0...etc...		concIndex: 	nil		startYear: 	1989		endYear: 	2020		startApplicationYear: 	1992		endApplicationYear: 	2015		year: 	1992		date: 	1 January 1992		yyyymmdd: 	'1992-01-01'		useCSV: 	0		stepsInHr: 	2		useTemperatureData: 	0BasicSimulator>>proceed	Receiver: a BasicSimulator	Arguments and temporary variables: 	Receiver's instance variables: 		modelSystem: 	a LPopITModelSystem		currentTime: 	1095.0		eventCount: 	0		interrupt: 	false		throughput: 	0		simulation: 	nilBasicSimulator>>proceedButNotBeyond:	Receiver: a BasicSimulator	Arguments and temporary variables: 		anInteger: 	11688	Receiver's instance variables: 		modelSystem: 	a LPopITModelSystem		currentTime: 	1095.0		eventCount: 	0		interrupt: 	false		throughput: 	0		simulation: 	nilBasicSimulator>>goToTime:	Receiver: a BasicSimulator	Arguments and temporary variables: 		aNumber: 	11688		end: 	11688		expTime: 	3814016992		expDuration: 	nil	Receiver's instance variables: 		modelSystem: 	a LPopITModelSystem		currentTime: 	1095.0		eventCount: 	0		interrupt: 	false		throughput: 	0		simulation: 	nilSimulation>>runRunToConclusion	Receiver: a Simulation	Arguments and temporary variables: 		ui: 	nil	Receiver's instance variables: 		projectEvent: 	#runRun		superPart: 	a Scenario		isFinished: 	false		creationTime: 	{10 November 2021 . 5:09:51 pm}		id: 	1		label: 	'x1s1r1'		duration: 	0.0		directory: 	nil		interrupted: 	false		currentSubPart: 	a BasicSimulator		running: 	false		runLength: 	11688Simulation>>runRun	Receiver: a Simulation	Arguments and temporary variables: 	Receiver's instance variables: 		projectEvent: 	#runRun		superPart: 	a Scenario		isFinished: 	false		creationTime: 	{10 November 2021 . 5:09:51 pm}		id: 	1		label: 	'x1s1r1'		duration: 	0.0		directory: 	nil		interrupted: 	false		currentSubPart: 	a BasicSimulator		running: 	false		runLength: 	11688Simulation(ModelProjectPart)>>execute	Receiver: a Simulation	Arguments and temporary variables: 	Receiver's instance variables: 		projectEvent: 	#runRun		superPart: 	a Scenario		isFinished: 	false		creationTime: 	{10 November 2021 . 5:09:51 pm}		id: 	1		label: 	'x1s1r1'		duration: 	0.0		directory: 	nil		interrupted: 	false		currentSubPart: 	a BasicSimulator		running: 	false		runLength: 	11688--- The full stack ---MpSqPortableUtil(MpPortableUtil)>>signalException:MpDecoder>>signalError:MpDecoder>>decodeMpDecoder>>decodeFrom:MpDecoder>>decode:MpDecoder class>>decode:[] in LPopProject class(CatchmentProject class)>>extractConcDataFromMsgpack:FullBlockClosure(BlockClosure)>>ensure:LPopProject class(CatchmentProject class)>>extractConcDataFromMsgpack:LPopITModelSystem(LPopModelSystem)>>setupExposureCurrentYearLPopITModelSystem(LPopModelSystem)>>setNewYearLPopITModelSystem(LPopModelSystem)>>incrementTimeLPopITModelSystem(LPopModelSystem)>>goBasicSimulator>>proceedBasicSimulator>>proceedButNotBeyond:BasicSimulator>>goToTime:Simulation>>runRunToConclusionSimulation>>runRunSimulation(ModelProjectPart)>>execute - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -Simulation(ModelProjectPart)>>startExecutionScenario(Experiment)>>runSubPartsScenario(ModelProjectPart)>>executeScenario(ModelProjectPart)>>startExecutionExperiment>>runSubPartsExperiment(ModelProjectPart)>>executeExperiment(ModelProjectPart)>>startExecutionModelProject>>runSubPartsModelProject(ModelProjectPart)>>executeModelProject(ModelProjectPart)>>startExecutionModelProject>>startModelProject>>runModelProjectForegroundUndefinedObject>>DoItCompiler>>evaluateCue:ifFail:Compiler>>evaluateCue:ifFail:logged:Compiler>>evaluate:in:to:notifying:ifFail:logged:Compiler class>>evaluate:for:notifying:logged:Compiler class>>evaluate:for:logged:Compiler class>>evaluate:logged:[] in [] in ReadStream(PositionableStream)>>fileInAnnouncing:FullBlockClosure(BlockClosure)>>on:do:[] in ReadStream(PositionableStream)>>fileInAnnouncing:[] in [] in MorphicUIManager>>displayProgress:at:from:to:during:FullBlockClosure(BlockClosure)>>on:do:[] in MorphicUIManager>>displayProgress:at:from:to:during:FullBlockClosure(BlockClosure)>>ensure:MorphicUIManager>>displayProgress:at:from:to:during:ProgressInitiationException>>defaultResumeValueProgressInitiationException(Exception)>>resumeProgressInitiationException>>defaultActionUndefinedObject>>handleSignal:ProgressInitiationException(Exception)>>signalProgressInitiationException>>display:at:from:to:during:ProgressInitiationException class>>display:at:from:to:during:ByteString(String)>>displayProgressAt:from:to:during:ByteString(String)>>displayProgressFrom:to:during:ReadStream(PositionableStream)>>fileInAnnouncing:ReadStream(PositionableStream)>>fileInCodeLoader>>installSourceFile:[] in CodeLoader>>installSourceFilesArray(SequenceableCollection)>>do:CodeLoader>>installSourceFiles-- and more not shown --